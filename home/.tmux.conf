# 0 is too far from ` ;)
set -g base-index 1
#
# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

TMUX_Is_TMUX=1

# Automatically set window title
set-window-option -g automatic-rename on

#U 
#set-window-option -g mode-keys vi
#last windows
#bind-key 'C-a' last-window
bind-key ` last-window
# Control-a to go to previous window
bind-key C-a last-window
#rename window
bind-key A command-prompt 'rename-window %%'
#~U

set-option -g set-titles on

#set -g default-terminal screen-256color
#set -g status-keys vi
set -g history-limit 10000

# Turn the mouse on, but without copy mode dragging
#set -g mouse on
#unbind -n MouseDrag1Pane
#unbind -Tcopy-mode MouseDrag1Pane
#setw -g mode-keys vi
#setw -g mode-mouse on
#setw -g mouse on
#setw -g monitor-activity on

unbind r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
set -g pane_current_path $PWD

#bind-key v split-window -h
#bind-key s split-window -v
#bind-key v split-window -h -c "#{pane_current_path}"
#bind-key s split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "$PWD"
bind-key s split-window -v -c "#{pane_current_path}"

#set -g default-path "~"
#bind % set default-path "" \; split-window -h \; set -u default-path
#bind '"' set default-path "" \; split-window -v \; set -u default-path
bind-key c new-window -c "#{pane_current_path}"
bind-key c new-window -c "$PWD"

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
#bind r source-file ~/.tmux.conf

# C-a [ to start copy mode..
# Use the below commands... v to start and y to copy
# C-a ] OR C-a P (<shift-p>) to paste...
#bind P paste-buffer
bind-key ESCAPE copy-mode
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
#bind-key -t vi-copy 'r' rectangle-toggle
#bind-key -t vi-copy 'C-v' rectangle-toggle

#bind -t vi-copy y copy-pipe "xclip -sel clip -i"

#save to clipboard
#bind-key > save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b <~/.tmux-buffer && rm ~/.tmux-buffer"

#U
#logging
#bind-key I pipe-pane "exec cat >>$HOME/tmuxlogs/'#I-#P-#W.log'" \; display-message 'Started logging to #P-#I-#W.log'
#bind-key i pipe-pane \; display-message 'Ended logging to #I-#P-#W.log'

#rescue a garbled pane
#unbind-key O
#bind-key O send-keys "!~/bin/sane.sh" C-m

#~U

# panes
set -g mode-style bg=red,fg=green,blink
#set -g pane-border-style black
#set -g pane-active-border-style brightred
set -g pane-border-style fg=black
set -g pane-active-border-style fg=brightred



## Status bar design
# status line
set -g status-justify left
#set -g status-bg default
#set -g status-fg colour12
#set -g status-interval 2
#set -g status-style dim
set -g status-style dim,bg=colour234,fg=colour137

#window mode
#setw -g mode-bg colour6
#setw -g mode-fg colour0
setw -g mode-style bg=colour6,fg=colour0

# window status
#setw -g window-status-format " #F#I:#W#F "
#setw -g window-status-current-format " #F#I:#W#F "
#setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
#setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
#setw -g window-status-current-bg colour0
#setw -g window-status-current-fg colour11
#setw -g window-status-current-attr dim
#setw -g window-status-bg green
#setw -g window-status-fg black
#setw -g window-status-attr reverse
setw -g window-status-current-style bg=colour0,fg=colour11,dim
setw -g window-status-style bg=green,fg=black,reverse


# Info on left (I don't have a session display for now)
set -g status-left ''

# THEME
#set -g status-bg black
#set -g status-fg white
#set -g window-status-current-bg white
#set -g window-status-current-fg black
#set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
#set -g status-left '#[fg=green](#S) #(whoami) '
#set -g status-left '#[fg=red](#S) #(whoami) '
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

#set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
#set -g status-right '#(hostname) %m/%d/%Y'
set -g status-right '[ %c ]'

#set -g status-left        "[ #S (#(uptime | awk -F'load averages:' '{ print $2 }' | awk '{ print $2 }')) ] ["
#set -g status-right       ' ] [ #(/Users/trobrock/Scripts/power.sh) #[fg=blue]%Y-%m-%d #[fg=default]%H:%M ]'

# Resize to the smallest client actively viewing a window
setw -g aggressive-resize on

#U
#word-separators
set-window-option -g word-separators ' @"=:;,.()[]{}'
set-window-option -ag word-separators "'"

set-window-option -g xterm-keys on

#set-option -g default-shell /bin/zsh
#set-option -g default-shell /usr/local/bin/zsh

unbind-key !
bind-key ! break-pane -d
unbind-key J
bind-key J command-prompt 'join-pane -s %%'
unbind-key S
bind-key S command-prompt 'swap-window -t %%'
unbind-key M
bind-key M command-prompt 'move-window -t %%'
unbind-key e
bind-key e switch-client -l

#~U

